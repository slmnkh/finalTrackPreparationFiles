
1 - to read the sensor data and save separated tracks for each intersection run:

script_for_reading_and_separating_tracks_from_sensor_files.py

2 - to read the individual track text files and export to xml or kml use:

kml_export_from_text.py and xml_export_from_text.py

3 - to read from the individual track text files and clean them and save cleaned text files use:

clean_tracks_from_text.py

If using manual annotation using the script "annotation_script.py" go directly to step 8

8 - manually annotate labels (annotation_script.py)

export to xml, re-plot and re-train HMM


%%%%%%%%%%%%%%%%%%%%

added utils:

- plot tracks and save images for all:

save_all_track_plots_from_text.py


%%%%%%%%%%%%%%%%%%%%

additional notes:

training data has labels.

testing data has no labels. format of text data file requires label so I put labels -99 for testing data, have to see what information svm_predict outputs

to remove tracks from any particular intersection add intersection name in file "src/xml_export_from_text"

to remove particular tracks, add names to file "rsc/tracksWithErrors.txt" and run code in file "src/remove_tracks_with_errors_from_folder_ofcleanedlabelled_texts.py"


%%%%%%%%%%%%%%%%%%%%%

Methods needed for SVM:

scaling :

./svm-scale -l -1 -u 1 -s ~/workspace/trackPreparation/src/svm/scale_range ~/workspace/trackPreparation/src/svm/training_svm.txt > ~/workspace/trackPreparation/src/svm/training_svm.scale

./svm-scale -r ~/workspace/trackPreparation/src/svm/scale_range ~/workspace/trackPreparation/src/svm/testing_svm.txt > ~/workspace/trackPreparation/src/svm/testing_svm.scale

training:

./svm-train -s 1 -t 1 -b 1 ~/workspace/trackPreparation/src/svm/training_svm.scale 

testing:

./svm-predict -b 1 ~/workspace/trackPreparation/src/svm/testing_svm.scale training_svm.scale.model ~/workspace/trackPreparation/src/svm/prediction.output
